p_0 : BITVECTOR(8);
p_1 : BITVECTOR(8);
p_2 : BITVECTOR(8);
p_3 : BITVECTOR(8);
p_4 : BITVECTOR(8);
p_5 : BITVECTOR(8);
p_6 : BITVECTOR(8);
p_7 : BITVECTOR(8);
p_8 : BITVECTOR(8);
p_9 : BITVECTOR(8);
p_10 : BITVECTOR(8);
p_11 : BITVECTOR(8);
p_12 : BITVECTOR(8);
p_13 : BITVECTOR(8);
p_14 : BITVECTOR(8);
p_15 : BITVECTOR(8);
k_0_0 : BITVECTOR(8);
k_0_1 : BITVECTOR(8);
k_0_2 : BITVECTOR(8);
k_0_3 : BITVECTOR(8);
k_0_4 : BITVECTOR(8);
k_0_5 : BITVECTOR(8);
k_0_6 : BITVECTOR(8);
k_0_7 : BITVECTOR(8);
k_0_8 : BITVECTOR(8);
k_0_9 : BITVECTOR(8);
k_0_10 : BITVECTOR(8);
k_0_11 : BITVECTOR(8);
k_0_12 : BITVECTOR(8);
k_0_13 : BITVECTOR(8);
k_0_14 : BITVECTOR(8);
k_0_15 : BITVECTOR(8);
x_0_0 : BITVECTOR(8);
x_0_1 : BITVECTOR(8);
x_0_2 : BITVECTOR(8);
x_0_3 : BITVECTOR(8);
x_0_4 : BITVECTOR(8);
x_0_5 : BITVECTOR(8);
x_0_6 : BITVECTOR(8);
x_0_7 : BITVECTOR(8);
x_0_8 : BITVECTOR(8);
x_0_9 : BITVECTOR(8);
x_0_10 : BITVECTOR(8);
x_0_11 : BITVECTOR(8);
x_0_12 : BITVECTOR(8);
x_0_13 : BITVECTOR(8);
x_0_14 : BITVECTOR(8);
x_0_15 : BITVECTOR(8);
x_1_0 : BITVECTOR(8);
x_1_1 : BITVECTOR(8);
x_1_2 : BITVECTOR(8);
x_1_3 : BITVECTOR(8);
x_1_4 : BITVECTOR(8);
x_1_5 : BITVECTOR(8);
x_1_6 : BITVECTOR(8);
x_1_7 : BITVECTOR(8);
x_1_8 : BITVECTOR(8);
x_1_9 : BITVECTOR(8);
x_1_10 : BITVECTOR(8);
x_1_11 : BITVECTOR(8);
x_1_12 : BITVECTOR(8);
x_1_13 : BITVECTOR(8);
x_1_14 : BITVECTOR(8);
x_1_15 : BITVECTOR(8);
xp_0_1_0 : BITVECTOR(8);
xp_0_1_1 : BITVECTOR(8);
xp_0_2_0 : BITVECTOR(8);
xp_0_2_1 : BITVECTOR(8);
xp_0_2_2 : BITVECTOR(8);
xp_0_3_0 : BITVECTOR(8);
xp_0_3_1 : BITVECTOR(8);
xp_0_3_2 : BITVECTOR(8);
xp_0_3_3 : BITVECTOR(8);
xp_0_5_0 : BITVECTOR(8);
xp_0_5_1 : BITVECTOR(8);
xp_0_6_0 : BITVECTOR(8);
xp_0_6_1 : BITVECTOR(8);
xp_0_6_2 : BITVECTOR(8);
xp_0_7_0 : BITVECTOR(8);
xp_0_7_1 : BITVECTOR(8);
xp_0_7_2 : BITVECTOR(8);
xp_0_7_3 : BITVECTOR(8);
xp_0_9_0 : BITVECTOR(8);
xp_0_9_1 : BITVECTOR(8);
xp_0_10_0 : BITVECTOR(8);
xp_0_10_1 : BITVECTOR(8);
xp_0_10_2 : BITVECTOR(8);
xp_0_11_0 : BITVECTOR(8);
xp_0_11_1 : BITVECTOR(8);
xp_0_11_2 : BITVECTOR(8);
xp_0_11_3 : BITVECTOR(8);
xp_0_13_0 : BITVECTOR(8);
xp_0_13_1 : BITVECTOR(8);
xp_0_14_0 : BITVECTOR(8);
xp_0_14_1 : BITVECTOR(8);
xp_0_14_2 : BITVECTOR(8);
xp_0_15_0 : BITVECTOR(8);
xp_0_15_1 : BITVECTOR(8);
xp_0_15_2 : BITVECTOR(8);
xp_0_15_3 : BITVECTOR(8);
y_0_0 : BITVECTOR(8);
y_0_1 : BITVECTOR(8);
y_0_2 : BITVECTOR(8);
y_0_3 : BITVECTOR(8);
y_0_4 : BITVECTOR(8);
y_0_5 : BITVECTOR(8);
y_0_6 : BITVECTOR(8);
y_0_7 : BITVECTOR(8);
y_0_8 : BITVECTOR(8);
y_0_9 : BITVECTOR(8);
y_0_10 : BITVECTOR(8);
y_0_11 : BITVECTOR(8);
y_0_12 : BITVECTOR(8);
y_0_13 : BITVECTOR(8);
y_0_14 : BITVECTOR(8);
y_0_15 : BITVECTOR(8);
yp_0_0_0 : BITVECTOR(8);
yp_0_0_1 : BITVECTOR(8);
yp_0_0_2 : BITVECTOR(8);
yp_0_0_3 : BITVECTOR(8);
yp_0_1_0 : BITVECTOR(8);
yp_0_1_1 : BITVECTOR(8);
yp_0_1_2 : BITVECTOR(8);
yp_0_2_0 : BITVECTOR(8);
yp_0_2_1 : BITVECTOR(8);
yp_0_4_0 : BITVECTOR(8);
yp_0_4_1 : BITVECTOR(8);
yp_0_4_2 : BITVECTOR(8);
yp_0_4_3 : BITVECTOR(8);
yp_0_5_0 : BITVECTOR(8);
yp_0_5_1 : BITVECTOR(8);
yp_0_5_2 : BITVECTOR(8);
yp_0_6_0 : BITVECTOR(8);
yp_0_6_1 : BITVECTOR(8);
yp_0_8_0 : BITVECTOR(8);
yp_0_8_1 : BITVECTOR(8);
yp_0_8_2 : BITVECTOR(8);
yp_0_8_3 : BITVECTOR(8);
yp_0_9_0 : BITVECTOR(8);
yp_0_9_1 : BITVECTOR(8);
yp_0_9_2 : BITVECTOR(8);
yp_0_10_0 : BITVECTOR(8);
yp_0_10_1 : BITVECTOR(8);
yp_0_12_0 : BITVECTOR(8);
yp_0_12_1 : BITVECTOR(8);
yp_0_12_2 : BITVECTOR(8);
yp_0_12_3 : BITVECTOR(8);
yp_0_13_0 : BITVECTOR(8);
yp_0_13_1 : BITVECTOR(8);
yp_0_13_2 : BITVECTOR(8);
yp_0_14_0 : BITVECTOR(8);
yp_0_14_1 : BITVECTOR(8);
a_0_0 : BITVECTOR(8);
a_0_1 : BITVECTOR(8);
a_0_2 : BITVECTOR(8);
a_0_3 : BITVECTOR(8);
a_0_4 : BITVECTOR(8);
a_0_5 : BITVECTOR(8);
a_0_6 : BITVECTOR(8);
a_0_7 : BITVECTOR(8);
a_0_8 : BITVECTOR(8);
a_0_9 : BITVECTOR(8);
a_0_10 : BITVECTOR(8);
a_0_11 : BITVECTOR(8);
a_0_12 : BITVECTOR(8);
a_0_13 : BITVECTOR(8);
a_0_14 : BITVECTOR(8);
a_0_15 : BITVECTOR(8);
ASSERT x_0_0 = BVPLUS(8,p_0,k_0_0);
ASSERT x_0_0 & p_0 = p_0;

ASSERT x_0_1 = BVPLUS(8,p_1,k_0_1);
ASSERT x_0_1 & p_1 = p_1;

ASSERT x_0_2 = BVPLUS(8,p_2,k_0_2);
ASSERT x_0_2 & p_2 = p_2;

ASSERT x_0_3 = BVPLUS(8,p_3,k_0_3);
ASSERT x_0_3 & p_3 = p_3;

ASSERT x_0_4 = BVPLUS(8,p_4,k_0_4);
ASSERT x_0_4 & p_4 = p_4;

ASSERT x_0_5 = BVPLUS(8,p_5,k_0_5);
ASSERT x_0_5 & p_5 = p_5;

ASSERT x_0_6 = BVPLUS(8,p_6,k_0_6);
ASSERT x_0_6 & p_6 = p_6;

ASSERT x_0_7 = BVPLUS(8,p_7,k_0_7);
ASSERT x_0_7 & p_7 = p_7;

ASSERT x_0_8 = BVPLUS(8,p_8,k_0_8);
ASSERT x_0_8 & p_8 = p_8;

ASSERT x_0_9 = BVPLUS(8,p_9,k_0_9);
ASSERT x_0_9 & p_9 = p_9;

ASSERT x_0_10 = BVPLUS(8,p_10,k_0_10);
ASSERT x_0_10 & p_10 = p_10;

ASSERT x_0_11 = BVPLUS(8,p_11,k_0_11);
ASSERT x_0_11 & p_11 = p_11;

ASSERT x_0_12 = BVPLUS(8,p_12,k_0_12);
ASSERT x_0_12 & p_12 = p_12;

ASSERT x_0_13 = BVPLUS(8,p_13,k_0_13);
ASSERT x_0_13 & p_13 = p_13;

ASSERT x_0_14 = BVPLUS(8,p_14,k_0_14);
ASSERT x_0_14 & p_14 = p_14;

ASSERT x_0_15 = BVPLUS(8,p_15,k_0_15);
ASSERT x_0_15 & p_15 = p_15;

t_x_0_3 : BITVECTOR(2);
ASSERT BVLE( t_x_0_3, 0bin11);
ASSERT BVGE( t_x_0_3, 0bin00);
ASSERT t_x_0_3@x_0_3 = BVPLUS( 10 , 0bin00@xp_0_3_0, 0bin00@xp_0_3_1, 0bin00@xp_0_3_2, 0bin00@xp_0_3_3, 0bin00000000@t_x_0_3);
ASSERT (IF x_0_3 = 0bin00000000 THEN t_x_0_3 = 0bin00 ELSE BVGE( t_x_0_3 , 0bin00) ENDIF);
t_x_0_2 : BITVECTOR(2);
ASSERT BVLE( t_x_0_2, 0bin10);
ASSERT BVGE( t_x_0_2, 0bin00);
ASSERT t_x_0_2@x_0_2 = BVPLUS( 10 , 0bin00@xp_0_2_0, 0bin00@xp_0_2_1, 0bin00@xp_0_2_2,0bin00000000@t_x_0_2);
ASSERT (IF x_0_2 = 0bin00000000 THEN t_x_0_2 = 0bin00 ELSE BVGE( t_x_0_2 , 0bin00) ENDIF);
t_x_0_1 : BITVECTOR(1);
ASSERT t_x_0_1@x_0_1 = BVPLUS( 9 , 0bin0@xp_0_1_0, 0bin0@xp_0_1_1, 0bin00000000@t_x_0_1);
ASSERT t_x_0_1@x_0_1 /= 0bin100000000;
ASSERT xp_0_1_0 = a_0_0;
ASSERT xp_0_2_0 = a_0_0;

ASSERT y_0_0 = BVPLUS(8,x_0_0,a_0_0,xp_0_3_0);
ASSERT y_0_0 & x_0_0 = x_0_0;

ASSERT y_0_0 & a_0_0 = a_0_0 ;
ASSERT y_0_0 & xp_0_3_0 = xp_0_3_0 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_0[0:0]), 0bin0000000@(y_0_0[1:1]), 0bin0000000@(y_0_0[2:2]), 0bin0000000@(y_0_0[3:3]), 0bin0000000@(y_0_0[4:4]), 0bin0000000@(y_0_0[5:5]), 0bin0000000@(y_0_0[6:6]), 0bin0000000@(y_0_0[7:7])) = BVPLUS(8, 0bin0000000@(x_0_0[0:0]), 0bin0000000@(a_0_0[0:0]), 0bin0000000@(xp_0_3_0[0:0]), 0bin0000000@(x_0_0[1:1]), 0bin0000000@(a_0_0[1:1]), 0bin0000000@(xp_0_3_0[1:1]), 0bin0000000@(x_0_0[2:2]), 0bin0000000@(a_0_0[2:2]), 0bin0000000@(xp_0_3_0[2:2]), 0bin0000000@(x_0_0[3:3]), 0bin0000000@(a_0_0[3:3]), 0bin0000000@(xp_0_3_0[3:3]), 0bin0000000@(x_0_0[4:4]), 0bin0000000@(a_0_0[4:4]), 0bin0000000@(xp_0_3_0[4:4]), 0bin0000000@(x_0_0[5:5]), 0bin0000000@(a_0_0[5:5]), 0bin0000000@(xp_0_3_0[5:5]), 0bin0000000@(x_0_0[6:6]), 0bin0000000@(a_0_0[6:6]), 0bin0000000@(xp_0_3_0[6:6]), 0bin0000000@(x_0_0[7:7]), 0bin0000000@(a_0_0[7:7]), 0bin0000000@(xp_0_3_0[7:7]));
t_y_0_0 : BITVECTOR(2);
ASSERT BVLE( t_y_0_0, 0bin11);
ASSERT BVGE( t_y_0_0, 0bin00);
ASSERT t_y_0_0@y_0_0 = BVPLUS( 10 , 0bin00@yp_0_0_0, 0bin00@yp_0_0_1, 0bin00@yp_0_0_2, 0bin00@yp_0_0_3, 0bin00000000@t_y_0_0);
ASSERT (IF y_0_0 = 0bin00000000 THEN t_y_0_0 = 0bin00 ELSE BVGE( t_y_0_0 , 0bin00) ENDIF);
ASSERT xp_0_2_1 = a_0_1;
ASSERT xp_0_3_1 = a_0_1;

ASSERT y_0_1 = BVPLUS(8,xp_0_1_1,a_0_1,yp_0_0_1);
ASSERT y_0_1 & xp_0_1_1 = xp_0_1_1;

ASSERT y_0_1 & a_0_1 = a_0_1 ;
ASSERT y_0_1 & yp_0_0_1 = yp_0_0_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_1[0:0]), 0bin0000000@(y_0_1[1:1]), 0bin0000000@(y_0_1[2:2]), 0bin0000000@(y_0_1[3:3]), 0bin0000000@(y_0_1[4:4]), 0bin0000000@(y_0_1[5:5]), 0bin0000000@(y_0_1[6:6]), 0bin0000000@(y_0_1[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_1_1[0:0]), 0bin0000000@(a_0_1[0:0]), 0bin0000000@(yp_0_0_1[0:0]), 0bin0000000@(xp_0_1_1[1:1]), 0bin0000000@(a_0_1[1:1]), 0bin0000000@(yp_0_0_1[1:1]), 0bin0000000@(xp_0_1_1[2:2]), 0bin0000000@(a_0_1[2:2]), 0bin0000000@(yp_0_0_1[2:2]), 0bin0000000@(xp_0_1_1[3:3]), 0bin0000000@(a_0_1[3:3]), 0bin0000000@(yp_0_0_1[3:3]), 0bin0000000@(xp_0_1_1[4:4]), 0bin0000000@(a_0_1[4:4]), 0bin0000000@(yp_0_0_1[4:4]), 0bin0000000@(xp_0_1_1[5:5]), 0bin0000000@(a_0_1[5:5]), 0bin0000000@(yp_0_0_1[5:5]), 0bin0000000@(xp_0_1_1[6:6]), 0bin0000000@(a_0_1[6:6]), 0bin0000000@(yp_0_0_1[6:6]), 0bin0000000@(xp_0_1_1[7:7]), 0bin0000000@(a_0_1[7:7]), 0bin0000000@(yp_0_0_1[7:7]));
t_y_0_1 : BITVECTOR(2);
ASSERT BVLE( t_y_0_1, 0bin10);
ASSERT BVGE( t_y_0_1, 0bin00);
ASSERT t_y_0_1@y_0_1 = BVPLUS( 10 , 0bin00@yp_0_1_0, 0bin00@yp_0_1_1, 0bin00@yp_0_1_2,0bin00000000@t_y_0_1);
ASSERT (IF y_0_1 = 0bin00000000 THEN t_y_0_1 = 0bin00 ELSE BVGE( t_y_0_1 , 0bin00) ENDIF);
ASSERT xp_0_3_2 = a_0_2;
ASSERT yp_0_0_2 = a_0_2;

ASSERT y_0_2 = BVPLUS(8,xp_0_2_2,a_0_2,yp_0_1_1);
ASSERT y_0_2 & xp_0_2_2 = xp_0_2_2;

ASSERT y_0_2 & a_0_2 = a_0_2 ;
ASSERT y_0_2 & yp_0_1_1 = yp_0_1_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_2[0:0]), 0bin0000000@(y_0_2[1:1]), 0bin0000000@(y_0_2[2:2]), 0bin0000000@(y_0_2[3:3]), 0bin0000000@(y_0_2[4:4]), 0bin0000000@(y_0_2[5:5]), 0bin0000000@(y_0_2[6:6]), 0bin0000000@(y_0_2[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_2_2[0:0]), 0bin0000000@(a_0_2[0:0]), 0bin0000000@(yp_0_1_1[0:0]), 0bin0000000@(xp_0_2_2[1:1]), 0bin0000000@(a_0_2[1:1]), 0bin0000000@(yp_0_1_1[1:1]), 0bin0000000@(xp_0_2_2[2:2]), 0bin0000000@(a_0_2[2:2]), 0bin0000000@(yp_0_1_1[2:2]), 0bin0000000@(xp_0_2_2[3:3]), 0bin0000000@(a_0_2[3:3]), 0bin0000000@(yp_0_1_1[3:3]), 0bin0000000@(xp_0_2_2[4:4]), 0bin0000000@(a_0_2[4:4]), 0bin0000000@(yp_0_1_1[4:4]), 0bin0000000@(xp_0_2_2[5:5]), 0bin0000000@(a_0_2[5:5]), 0bin0000000@(yp_0_1_1[5:5]), 0bin0000000@(xp_0_2_2[6:6]), 0bin0000000@(a_0_2[6:6]), 0bin0000000@(yp_0_1_1[6:6]), 0bin0000000@(xp_0_2_2[7:7]), 0bin0000000@(a_0_2[7:7]), 0bin0000000@(yp_0_1_1[7:7]));
t_y_0_2 : BITVECTOR(1);
ASSERT t_y_0_2@y_0_2 = BVPLUS( 9 , 0bin0@yp_0_2_0, 0bin0@yp_0_2_1, 0bin00000000@t_y_0_2);
ASSERT t_y_0_2@y_0_2 /= 0bin100000000;
ASSERT yp_0_0_3 = a_0_3;
ASSERT yp_0_1_2 = a_0_3;

ASSERT y_0_3 = BVPLUS(8,xp_0_3_3,a_0_3,yp_0_2_1);
ASSERT y_0_3 & xp_0_3_3 = xp_0_3_3;

ASSERT y_0_3 & a_0_3 = a_0_3 ;
ASSERT y_0_3 & yp_0_2_1 = yp_0_2_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_3[0:0]), 0bin0000000@(y_0_3[1:1]), 0bin0000000@(y_0_3[2:2]), 0bin0000000@(y_0_3[3:3]), 0bin0000000@(y_0_3[4:4]), 0bin0000000@(y_0_3[5:5]), 0bin0000000@(y_0_3[6:6]), 0bin0000000@(y_0_3[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_3_3[0:0]), 0bin0000000@(a_0_3[0:0]), 0bin0000000@(yp_0_2_1[0:0]), 0bin0000000@(xp_0_3_3[1:1]), 0bin0000000@(a_0_3[1:1]), 0bin0000000@(yp_0_2_1[1:1]), 0bin0000000@(xp_0_3_3[2:2]), 0bin0000000@(a_0_3[2:2]), 0bin0000000@(yp_0_2_1[2:2]), 0bin0000000@(xp_0_3_3[3:3]), 0bin0000000@(a_0_3[3:3]), 0bin0000000@(yp_0_2_1[3:3]), 0bin0000000@(xp_0_3_3[4:4]), 0bin0000000@(a_0_3[4:4]), 0bin0000000@(yp_0_2_1[4:4]), 0bin0000000@(xp_0_3_3[5:5]), 0bin0000000@(a_0_3[5:5]), 0bin0000000@(yp_0_2_1[5:5]), 0bin0000000@(xp_0_3_3[6:6]), 0bin0000000@(a_0_3[6:6]), 0bin0000000@(yp_0_2_1[6:6]), 0bin0000000@(xp_0_3_3[7:7]), 0bin0000000@(a_0_3[7:7]), 0bin0000000@(yp_0_2_1[7:7]));
t_x_0_7 : BITVECTOR(2);
ASSERT BVLE( t_x_0_7, 0bin11);
ASSERT BVGE( t_x_0_7, 0bin00);
ASSERT t_x_0_7@x_0_7 = BVPLUS( 10 , 0bin00@xp_0_7_0, 0bin00@xp_0_7_1, 0bin00@xp_0_7_2, 0bin00@xp_0_7_3, 0bin00000000@t_x_0_7);
ASSERT (IF x_0_7 = 0bin00000000 THEN t_x_0_7 = 0bin00 ELSE BVGE( t_x_0_7 , 0bin00) ENDIF);
t_x_0_6 : BITVECTOR(2);
ASSERT BVLE( t_x_0_6, 0bin10);
ASSERT BVGE( t_x_0_6, 0bin00);
ASSERT t_x_0_6@x_0_6 = BVPLUS( 10 , 0bin00@xp_0_6_0, 0bin00@xp_0_6_1, 0bin00@xp_0_6_2,0bin00000000@t_x_0_6);
ASSERT (IF x_0_6 = 0bin00000000 THEN t_x_0_6 = 0bin00 ELSE BVGE( t_x_0_6 , 0bin00) ENDIF);
t_x_0_5 : BITVECTOR(1);
ASSERT t_x_0_5@x_0_5 = BVPLUS( 9 , 0bin0@xp_0_5_0, 0bin0@xp_0_5_1, 0bin00000000@t_x_0_5);
ASSERT t_x_0_5@x_0_5 /= 0bin100000000;
ASSERT xp_0_5_0 = a_0_4;
ASSERT xp_0_6_0 = a_0_4;

ASSERT y_0_4 = BVPLUS(8,x_0_4,a_0_4,xp_0_7_0);
ASSERT y_0_4 & x_0_4 = x_0_4;

ASSERT y_0_4 & a_0_4 = a_0_4 ;
ASSERT y_0_4 & xp_0_7_0 = xp_0_7_0 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_4[0:0]), 0bin0000000@(y_0_4[1:1]), 0bin0000000@(y_0_4[2:2]), 0bin0000000@(y_0_4[3:3]), 0bin0000000@(y_0_4[4:4]), 0bin0000000@(y_0_4[5:5]), 0bin0000000@(y_0_4[6:6]), 0bin0000000@(y_0_4[7:7])) = BVPLUS(8, 0bin0000000@(x_0_4[0:0]), 0bin0000000@(a_0_4[0:0]), 0bin0000000@(xp_0_7_0[0:0]), 0bin0000000@(x_0_4[1:1]), 0bin0000000@(a_0_4[1:1]), 0bin0000000@(xp_0_7_0[1:1]), 0bin0000000@(x_0_4[2:2]), 0bin0000000@(a_0_4[2:2]), 0bin0000000@(xp_0_7_0[2:2]), 0bin0000000@(x_0_4[3:3]), 0bin0000000@(a_0_4[3:3]), 0bin0000000@(xp_0_7_0[3:3]), 0bin0000000@(x_0_4[4:4]), 0bin0000000@(a_0_4[4:4]), 0bin0000000@(xp_0_7_0[4:4]), 0bin0000000@(x_0_4[5:5]), 0bin0000000@(a_0_4[5:5]), 0bin0000000@(xp_0_7_0[5:5]), 0bin0000000@(x_0_4[6:6]), 0bin0000000@(a_0_4[6:6]), 0bin0000000@(xp_0_7_0[6:6]), 0bin0000000@(x_0_4[7:7]), 0bin0000000@(a_0_4[7:7]), 0bin0000000@(xp_0_7_0[7:7]));
t_y_0_4 : BITVECTOR(2);
ASSERT BVLE( t_y_0_4, 0bin11);
ASSERT BVGE( t_y_0_4, 0bin00);
ASSERT t_y_0_4@y_0_4 = BVPLUS( 10 , 0bin00@yp_0_4_0, 0bin00@yp_0_4_1, 0bin00@yp_0_4_2, 0bin00@yp_0_4_3, 0bin00000000@t_y_0_4);
ASSERT (IF y_0_4 = 0bin00000000 THEN t_y_0_4 = 0bin00 ELSE BVGE( t_y_0_4 , 0bin00) ENDIF);
ASSERT xp_0_6_1 = a_0_5;
ASSERT xp_0_7_1 = a_0_5;

ASSERT y_0_5 = BVPLUS(8,xp_0_5_1,a_0_5,yp_0_4_1);
ASSERT y_0_5 & xp_0_5_1 = xp_0_5_1;

ASSERT y_0_5 & a_0_5 = a_0_5 ;
ASSERT y_0_5 & yp_0_4_1 = yp_0_4_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_5[0:0]), 0bin0000000@(y_0_5[1:1]), 0bin0000000@(y_0_5[2:2]), 0bin0000000@(y_0_5[3:3]), 0bin0000000@(y_0_5[4:4]), 0bin0000000@(y_0_5[5:5]), 0bin0000000@(y_0_5[6:6]), 0bin0000000@(y_0_5[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_5_1[0:0]), 0bin0000000@(a_0_5[0:0]), 0bin0000000@(yp_0_4_1[0:0]), 0bin0000000@(xp_0_5_1[1:1]), 0bin0000000@(a_0_5[1:1]), 0bin0000000@(yp_0_4_1[1:1]), 0bin0000000@(xp_0_5_1[2:2]), 0bin0000000@(a_0_5[2:2]), 0bin0000000@(yp_0_4_1[2:2]), 0bin0000000@(xp_0_5_1[3:3]), 0bin0000000@(a_0_5[3:3]), 0bin0000000@(yp_0_4_1[3:3]), 0bin0000000@(xp_0_5_1[4:4]), 0bin0000000@(a_0_5[4:4]), 0bin0000000@(yp_0_4_1[4:4]), 0bin0000000@(xp_0_5_1[5:5]), 0bin0000000@(a_0_5[5:5]), 0bin0000000@(yp_0_4_1[5:5]), 0bin0000000@(xp_0_5_1[6:6]), 0bin0000000@(a_0_5[6:6]), 0bin0000000@(yp_0_4_1[6:6]), 0bin0000000@(xp_0_5_1[7:7]), 0bin0000000@(a_0_5[7:7]), 0bin0000000@(yp_0_4_1[7:7]));
t_y_0_5 : BITVECTOR(2);
ASSERT BVLE( t_y_0_5, 0bin10);
ASSERT BVGE( t_y_0_5, 0bin00);
ASSERT t_y_0_5@y_0_5 = BVPLUS( 10 , 0bin00@yp_0_5_0, 0bin00@yp_0_5_1, 0bin00@yp_0_5_2,0bin00000000@t_y_0_5);
ASSERT (IF y_0_5 = 0bin00000000 THEN t_y_0_5 = 0bin00 ELSE BVGE( t_y_0_5 , 0bin00) ENDIF);
ASSERT xp_0_7_2 = a_0_6;
ASSERT yp_0_4_2 = a_0_6;

ASSERT y_0_6 = BVPLUS(8,xp_0_6_2,a_0_6,yp_0_5_1);
ASSERT y_0_6 & xp_0_6_2 = xp_0_6_2;

ASSERT y_0_6 & a_0_6 = a_0_6 ;
ASSERT y_0_6 & yp_0_5_1 = yp_0_5_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_6[0:0]), 0bin0000000@(y_0_6[1:1]), 0bin0000000@(y_0_6[2:2]), 0bin0000000@(y_0_6[3:3]), 0bin0000000@(y_0_6[4:4]), 0bin0000000@(y_0_6[5:5]), 0bin0000000@(y_0_6[6:6]), 0bin0000000@(y_0_6[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_6_2[0:0]), 0bin0000000@(a_0_6[0:0]), 0bin0000000@(yp_0_5_1[0:0]), 0bin0000000@(xp_0_6_2[1:1]), 0bin0000000@(a_0_6[1:1]), 0bin0000000@(yp_0_5_1[1:1]), 0bin0000000@(xp_0_6_2[2:2]), 0bin0000000@(a_0_6[2:2]), 0bin0000000@(yp_0_5_1[2:2]), 0bin0000000@(xp_0_6_2[3:3]), 0bin0000000@(a_0_6[3:3]), 0bin0000000@(yp_0_5_1[3:3]), 0bin0000000@(xp_0_6_2[4:4]), 0bin0000000@(a_0_6[4:4]), 0bin0000000@(yp_0_5_1[4:4]), 0bin0000000@(xp_0_6_2[5:5]), 0bin0000000@(a_0_6[5:5]), 0bin0000000@(yp_0_5_1[5:5]), 0bin0000000@(xp_0_6_2[6:6]), 0bin0000000@(a_0_6[6:6]), 0bin0000000@(yp_0_5_1[6:6]), 0bin0000000@(xp_0_6_2[7:7]), 0bin0000000@(a_0_6[7:7]), 0bin0000000@(yp_0_5_1[7:7]));
t_y_0_6 : BITVECTOR(1);
ASSERT t_y_0_6@y_0_6 = BVPLUS( 9 , 0bin0@yp_0_6_0, 0bin0@yp_0_6_1, 0bin00000000@t_y_0_6);
ASSERT t_y_0_6@y_0_6 /= 0bin100000000;
ASSERT yp_0_4_3 = a_0_7;
ASSERT yp_0_5_2 = a_0_7;

ASSERT y_0_7 = BVPLUS(8,xp_0_7_3,a_0_7,yp_0_6_1);
ASSERT y_0_7 & xp_0_7_3 = xp_0_7_3;

ASSERT y_0_7 & a_0_7 = a_0_7 ;
ASSERT y_0_7 & yp_0_6_1 = yp_0_6_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_7[0:0]), 0bin0000000@(y_0_7[1:1]), 0bin0000000@(y_0_7[2:2]), 0bin0000000@(y_0_7[3:3]), 0bin0000000@(y_0_7[4:4]), 0bin0000000@(y_0_7[5:5]), 0bin0000000@(y_0_7[6:6]), 0bin0000000@(y_0_7[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_7_3[0:0]), 0bin0000000@(a_0_7[0:0]), 0bin0000000@(yp_0_6_1[0:0]), 0bin0000000@(xp_0_7_3[1:1]), 0bin0000000@(a_0_7[1:1]), 0bin0000000@(yp_0_6_1[1:1]), 0bin0000000@(xp_0_7_3[2:2]), 0bin0000000@(a_0_7[2:2]), 0bin0000000@(yp_0_6_1[2:2]), 0bin0000000@(xp_0_7_3[3:3]), 0bin0000000@(a_0_7[3:3]), 0bin0000000@(yp_0_6_1[3:3]), 0bin0000000@(xp_0_7_3[4:4]), 0bin0000000@(a_0_7[4:4]), 0bin0000000@(yp_0_6_1[4:4]), 0bin0000000@(xp_0_7_3[5:5]), 0bin0000000@(a_0_7[5:5]), 0bin0000000@(yp_0_6_1[5:5]), 0bin0000000@(xp_0_7_3[6:6]), 0bin0000000@(a_0_7[6:6]), 0bin0000000@(yp_0_6_1[6:6]), 0bin0000000@(xp_0_7_3[7:7]), 0bin0000000@(a_0_7[7:7]), 0bin0000000@(yp_0_6_1[7:7]));
t_x_0_11 : BITVECTOR(2);
ASSERT BVLE( t_x_0_11, 0bin11);
ASSERT BVGE( t_x_0_11, 0bin00);
ASSERT t_x_0_11@x_0_11 = BVPLUS( 10 , 0bin00@xp_0_11_0, 0bin00@xp_0_11_1, 0bin00@xp_0_11_2, 0bin00@xp_0_11_3, 0bin00000000@t_x_0_11);
ASSERT (IF x_0_11 = 0bin00000000 THEN t_x_0_11 = 0bin00 ELSE BVGE( t_x_0_11 , 0bin00) ENDIF);
t_x_0_10 : BITVECTOR(2);
ASSERT BVLE( t_x_0_10, 0bin10);
ASSERT BVGE( t_x_0_10, 0bin00);
ASSERT t_x_0_10@x_0_10 = BVPLUS( 10 , 0bin00@xp_0_10_0, 0bin00@xp_0_10_1, 0bin00@xp_0_10_2,0bin00000000@t_x_0_10);
ASSERT (IF x_0_10 = 0bin00000000 THEN t_x_0_10 = 0bin00 ELSE BVGE( t_x_0_10 , 0bin00) ENDIF);
t_x_0_9 : BITVECTOR(1);
ASSERT t_x_0_9@x_0_9 = BVPLUS( 9 , 0bin0@xp_0_9_0, 0bin0@xp_0_9_1, 0bin00000000@t_x_0_9);
ASSERT t_x_0_9@x_0_9 /= 0bin100000000;
ASSERT xp_0_9_0 = a_0_8;
ASSERT xp_0_10_0 = a_0_8;

ASSERT y_0_8 = BVPLUS(8,x_0_8,a_0_8,xp_0_11_0);
ASSERT y_0_8 & x_0_8 = x_0_8;

ASSERT y_0_8 & a_0_8 = a_0_8 ;
ASSERT y_0_8 & xp_0_11_0 = xp_0_11_0 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_8[0:0]), 0bin0000000@(y_0_8[1:1]), 0bin0000000@(y_0_8[2:2]), 0bin0000000@(y_0_8[3:3]), 0bin0000000@(y_0_8[4:4]), 0bin0000000@(y_0_8[5:5]), 0bin0000000@(y_0_8[6:6]), 0bin0000000@(y_0_8[7:7])) = BVPLUS(8, 0bin0000000@(x_0_8[0:0]), 0bin0000000@(a_0_8[0:0]), 0bin0000000@(xp_0_11_0[0:0]), 0bin0000000@(x_0_8[1:1]), 0bin0000000@(a_0_8[1:1]), 0bin0000000@(xp_0_11_0[1:1]), 0bin0000000@(x_0_8[2:2]), 0bin0000000@(a_0_8[2:2]), 0bin0000000@(xp_0_11_0[2:2]), 0bin0000000@(x_0_8[3:3]), 0bin0000000@(a_0_8[3:3]), 0bin0000000@(xp_0_11_0[3:3]), 0bin0000000@(x_0_8[4:4]), 0bin0000000@(a_0_8[4:4]), 0bin0000000@(xp_0_11_0[4:4]), 0bin0000000@(x_0_8[5:5]), 0bin0000000@(a_0_8[5:5]), 0bin0000000@(xp_0_11_0[5:5]), 0bin0000000@(x_0_8[6:6]), 0bin0000000@(a_0_8[6:6]), 0bin0000000@(xp_0_11_0[6:6]), 0bin0000000@(x_0_8[7:7]), 0bin0000000@(a_0_8[7:7]), 0bin0000000@(xp_0_11_0[7:7]));
t_y_0_8 : BITVECTOR(2);
ASSERT BVLE( t_y_0_8, 0bin11);
ASSERT BVGE( t_y_0_8, 0bin00);
ASSERT t_y_0_8@y_0_8 = BVPLUS( 10 , 0bin00@yp_0_8_0, 0bin00@yp_0_8_1, 0bin00@yp_0_8_2, 0bin00@yp_0_8_3, 0bin00000000@t_y_0_8);
ASSERT (IF y_0_8 = 0bin00000000 THEN t_y_0_8 = 0bin00 ELSE BVGE( t_y_0_8 , 0bin00) ENDIF);
ASSERT xp_0_10_1 = a_0_9;
ASSERT xp_0_11_1 = a_0_9;

ASSERT y_0_9 = BVPLUS(8,xp_0_9_1,a_0_9,yp_0_8_1);
ASSERT y_0_9 & xp_0_9_1 = xp_0_9_1;

ASSERT y_0_9 & a_0_9 = a_0_9 ;
ASSERT y_0_9 & yp_0_8_1 = yp_0_8_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_9[0:0]), 0bin0000000@(y_0_9[1:1]), 0bin0000000@(y_0_9[2:2]), 0bin0000000@(y_0_9[3:3]), 0bin0000000@(y_0_9[4:4]), 0bin0000000@(y_0_9[5:5]), 0bin0000000@(y_0_9[6:6]), 0bin0000000@(y_0_9[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_9_1[0:0]), 0bin0000000@(a_0_9[0:0]), 0bin0000000@(yp_0_8_1[0:0]), 0bin0000000@(xp_0_9_1[1:1]), 0bin0000000@(a_0_9[1:1]), 0bin0000000@(yp_0_8_1[1:1]), 0bin0000000@(xp_0_9_1[2:2]), 0bin0000000@(a_0_9[2:2]), 0bin0000000@(yp_0_8_1[2:2]), 0bin0000000@(xp_0_9_1[3:3]), 0bin0000000@(a_0_9[3:3]), 0bin0000000@(yp_0_8_1[3:3]), 0bin0000000@(xp_0_9_1[4:4]), 0bin0000000@(a_0_9[4:4]), 0bin0000000@(yp_0_8_1[4:4]), 0bin0000000@(xp_0_9_1[5:5]), 0bin0000000@(a_0_9[5:5]), 0bin0000000@(yp_0_8_1[5:5]), 0bin0000000@(xp_0_9_1[6:6]), 0bin0000000@(a_0_9[6:6]), 0bin0000000@(yp_0_8_1[6:6]), 0bin0000000@(xp_0_9_1[7:7]), 0bin0000000@(a_0_9[7:7]), 0bin0000000@(yp_0_8_1[7:7]));
t_y_0_9 : BITVECTOR(2);
ASSERT BVLE( t_y_0_9, 0bin10);
ASSERT BVGE( t_y_0_9, 0bin00);
ASSERT t_y_0_9@y_0_9 = BVPLUS( 10 , 0bin00@yp_0_9_0, 0bin00@yp_0_9_1, 0bin00@yp_0_9_2,0bin00000000@t_y_0_9);
ASSERT (IF y_0_9 = 0bin00000000 THEN t_y_0_9 = 0bin00 ELSE BVGE( t_y_0_9 , 0bin00) ENDIF);
ASSERT xp_0_11_2 = a_0_10;
ASSERT yp_0_8_2 = a_0_10;

ASSERT y_0_10 = BVPLUS(8,xp_0_10_2,a_0_10,yp_0_9_1);
ASSERT y_0_10 & xp_0_10_2 = xp_0_10_2;

ASSERT y_0_10 & a_0_10 = a_0_10 ;
ASSERT y_0_10 & yp_0_9_1 = yp_0_9_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_10[0:0]), 0bin0000000@(y_0_10[1:1]), 0bin0000000@(y_0_10[2:2]), 0bin0000000@(y_0_10[3:3]), 0bin0000000@(y_0_10[4:4]), 0bin0000000@(y_0_10[5:5]), 0bin0000000@(y_0_10[6:6]), 0bin0000000@(y_0_10[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_10_2[0:0]), 0bin0000000@(a_0_10[0:0]), 0bin0000000@(yp_0_9_1[0:0]), 0bin0000000@(xp_0_10_2[1:1]), 0bin0000000@(a_0_10[1:1]), 0bin0000000@(yp_0_9_1[1:1]), 0bin0000000@(xp_0_10_2[2:2]), 0bin0000000@(a_0_10[2:2]), 0bin0000000@(yp_0_9_1[2:2]), 0bin0000000@(xp_0_10_2[3:3]), 0bin0000000@(a_0_10[3:3]), 0bin0000000@(yp_0_9_1[3:3]), 0bin0000000@(xp_0_10_2[4:4]), 0bin0000000@(a_0_10[4:4]), 0bin0000000@(yp_0_9_1[4:4]), 0bin0000000@(xp_0_10_2[5:5]), 0bin0000000@(a_0_10[5:5]), 0bin0000000@(yp_0_9_1[5:5]), 0bin0000000@(xp_0_10_2[6:6]), 0bin0000000@(a_0_10[6:6]), 0bin0000000@(yp_0_9_1[6:6]), 0bin0000000@(xp_0_10_2[7:7]), 0bin0000000@(a_0_10[7:7]), 0bin0000000@(yp_0_9_1[7:7]));
t_y_0_10 : BITVECTOR(1);
ASSERT t_y_0_10@y_0_10 = BVPLUS( 9 , 0bin0@yp_0_10_0, 0bin0@yp_0_10_1, 0bin00000000@t_y_0_10);
ASSERT t_y_0_10@y_0_10 /= 0bin100000000;
ASSERT yp_0_8_3 = a_0_11;
ASSERT yp_0_9_2 = a_0_11;

ASSERT y_0_11 = BVPLUS(8,xp_0_11_3,a_0_11,yp_0_10_1);
ASSERT y_0_11 & xp_0_11_3 = xp_0_11_3;

ASSERT y_0_11 & a_0_11 = a_0_11 ;
ASSERT y_0_11 & yp_0_10_1 = yp_0_10_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_11[0:0]), 0bin0000000@(y_0_11[1:1]), 0bin0000000@(y_0_11[2:2]), 0bin0000000@(y_0_11[3:3]), 0bin0000000@(y_0_11[4:4]), 0bin0000000@(y_0_11[5:5]), 0bin0000000@(y_0_11[6:6]), 0bin0000000@(y_0_11[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_11_3[0:0]), 0bin0000000@(a_0_11[0:0]), 0bin0000000@(yp_0_10_1[0:0]), 0bin0000000@(xp_0_11_3[1:1]), 0bin0000000@(a_0_11[1:1]), 0bin0000000@(yp_0_10_1[1:1]), 0bin0000000@(xp_0_11_3[2:2]), 0bin0000000@(a_0_11[2:2]), 0bin0000000@(yp_0_10_1[2:2]), 0bin0000000@(xp_0_11_3[3:3]), 0bin0000000@(a_0_11[3:3]), 0bin0000000@(yp_0_10_1[3:3]), 0bin0000000@(xp_0_11_3[4:4]), 0bin0000000@(a_0_11[4:4]), 0bin0000000@(yp_0_10_1[4:4]), 0bin0000000@(xp_0_11_3[5:5]), 0bin0000000@(a_0_11[5:5]), 0bin0000000@(yp_0_10_1[5:5]), 0bin0000000@(xp_0_11_3[6:6]), 0bin0000000@(a_0_11[6:6]), 0bin0000000@(yp_0_10_1[6:6]), 0bin0000000@(xp_0_11_3[7:7]), 0bin0000000@(a_0_11[7:7]), 0bin0000000@(yp_0_10_1[7:7]));
t_x_0_15 : BITVECTOR(2);
ASSERT BVLE( t_x_0_15, 0bin11);
ASSERT BVGE( t_x_0_15, 0bin00);
ASSERT t_x_0_15@x_0_15 = BVPLUS( 10 , 0bin00@xp_0_15_0, 0bin00@xp_0_15_1, 0bin00@xp_0_15_2, 0bin00@xp_0_15_3, 0bin00000000@t_x_0_15);
ASSERT (IF x_0_15 = 0bin00000000 THEN t_x_0_15 = 0bin00 ELSE BVGE( t_x_0_15 , 0bin00) ENDIF);
t_x_0_14 : BITVECTOR(2);
ASSERT BVLE( t_x_0_14, 0bin10);
ASSERT BVGE( t_x_0_14, 0bin00);
ASSERT t_x_0_14@x_0_14 = BVPLUS( 10 , 0bin00@xp_0_14_0, 0bin00@xp_0_14_1, 0bin00@xp_0_14_2,0bin00000000@t_x_0_14);
ASSERT (IF x_0_14 = 0bin00000000 THEN t_x_0_14 = 0bin00 ELSE BVGE( t_x_0_14 , 0bin00) ENDIF);
t_x_0_13 : BITVECTOR(1);
ASSERT t_x_0_13@x_0_13 = BVPLUS( 9 , 0bin0@xp_0_13_0, 0bin0@xp_0_13_1, 0bin00000000@t_x_0_13);
ASSERT t_x_0_13@x_0_13 /= 0bin100000000;
ASSERT xp_0_13_0 = a_0_12;
ASSERT xp_0_14_0 = a_0_12;

ASSERT y_0_12 = BVPLUS(8,x_0_12,a_0_12,xp_0_15_0);
ASSERT y_0_12 & x_0_12 = x_0_12;

ASSERT y_0_12 & a_0_12 = a_0_12 ;
ASSERT y_0_12 & xp_0_15_0 = xp_0_15_0 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_12[0:0]), 0bin0000000@(y_0_12[1:1]), 0bin0000000@(y_0_12[2:2]), 0bin0000000@(y_0_12[3:3]), 0bin0000000@(y_0_12[4:4]), 0bin0000000@(y_0_12[5:5]), 0bin0000000@(y_0_12[6:6]), 0bin0000000@(y_0_12[7:7])) = BVPLUS(8, 0bin0000000@(x_0_12[0:0]), 0bin0000000@(a_0_12[0:0]), 0bin0000000@(xp_0_15_0[0:0]), 0bin0000000@(x_0_12[1:1]), 0bin0000000@(a_0_12[1:1]), 0bin0000000@(xp_0_15_0[1:1]), 0bin0000000@(x_0_12[2:2]), 0bin0000000@(a_0_12[2:2]), 0bin0000000@(xp_0_15_0[2:2]), 0bin0000000@(x_0_12[3:3]), 0bin0000000@(a_0_12[3:3]), 0bin0000000@(xp_0_15_0[3:3]), 0bin0000000@(x_0_12[4:4]), 0bin0000000@(a_0_12[4:4]), 0bin0000000@(xp_0_15_0[4:4]), 0bin0000000@(x_0_12[5:5]), 0bin0000000@(a_0_12[5:5]), 0bin0000000@(xp_0_15_0[5:5]), 0bin0000000@(x_0_12[6:6]), 0bin0000000@(a_0_12[6:6]), 0bin0000000@(xp_0_15_0[6:6]), 0bin0000000@(x_0_12[7:7]), 0bin0000000@(a_0_12[7:7]), 0bin0000000@(xp_0_15_0[7:7]));
t_y_0_12 : BITVECTOR(2);
ASSERT BVLE( t_y_0_12, 0bin11);
ASSERT BVGE( t_y_0_12, 0bin00);
ASSERT t_y_0_12@y_0_12 = BVPLUS( 10 , 0bin00@yp_0_12_0, 0bin00@yp_0_12_1, 0bin00@yp_0_12_2, 0bin00@yp_0_12_3, 0bin00000000@t_y_0_12);
ASSERT (IF y_0_12 = 0bin00000000 THEN t_y_0_12 = 0bin00 ELSE BVGE( t_y_0_12 , 0bin00) ENDIF);
ASSERT xp_0_14_1 = a_0_13;
ASSERT xp_0_15_1 = a_0_13;

ASSERT y_0_13 = BVPLUS(8,xp_0_13_1,a_0_13,yp_0_12_1);
ASSERT y_0_13 & xp_0_13_1 = xp_0_13_1;

ASSERT y_0_13 & a_0_13 = a_0_13 ;
ASSERT y_0_13 & yp_0_12_1 = yp_0_12_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_13[0:0]), 0bin0000000@(y_0_13[1:1]), 0bin0000000@(y_0_13[2:2]), 0bin0000000@(y_0_13[3:3]), 0bin0000000@(y_0_13[4:4]), 0bin0000000@(y_0_13[5:5]), 0bin0000000@(y_0_13[6:6]), 0bin0000000@(y_0_13[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_13_1[0:0]), 0bin0000000@(a_0_13[0:0]), 0bin0000000@(yp_0_12_1[0:0]), 0bin0000000@(xp_0_13_1[1:1]), 0bin0000000@(a_0_13[1:1]), 0bin0000000@(yp_0_12_1[1:1]), 0bin0000000@(xp_0_13_1[2:2]), 0bin0000000@(a_0_13[2:2]), 0bin0000000@(yp_0_12_1[2:2]), 0bin0000000@(xp_0_13_1[3:3]), 0bin0000000@(a_0_13[3:3]), 0bin0000000@(yp_0_12_1[3:3]), 0bin0000000@(xp_0_13_1[4:4]), 0bin0000000@(a_0_13[4:4]), 0bin0000000@(yp_0_12_1[4:4]), 0bin0000000@(xp_0_13_1[5:5]), 0bin0000000@(a_0_13[5:5]), 0bin0000000@(yp_0_12_1[5:5]), 0bin0000000@(xp_0_13_1[6:6]), 0bin0000000@(a_0_13[6:6]), 0bin0000000@(yp_0_12_1[6:6]), 0bin0000000@(xp_0_13_1[7:7]), 0bin0000000@(a_0_13[7:7]), 0bin0000000@(yp_0_12_1[7:7]));
t_y_0_13 : BITVECTOR(2);
ASSERT BVLE( t_y_0_13, 0bin10);
ASSERT BVGE( t_y_0_13, 0bin00);
ASSERT t_y_0_13@y_0_13 = BVPLUS( 10 , 0bin00@yp_0_13_0, 0bin00@yp_0_13_1, 0bin00@yp_0_13_2,0bin00000000@t_y_0_13);
ASSERT (IF y_0_13 = 0bin00000000 THEN t_y_0_13 = 0bin00 ELSE BVGE( t_y_0_13 , 0bin00) ENDIF);
ASSERT xp_0_15_2 = a_0_14;
ASSERT yp_0_12_2 = a_0_14;

ASSERT y_0_14 = BVPLUS(8,xp_0_14_2,a_0_14,yp_0_13_1);
ASSERT y_0_14 & xp_0_14_2 = xp_0_14_2;

ASSERT y_0_14 & a_0_14 = a_0_14 ;
ASSERT y_0_14 & yp_0_13_1 = yp_0_13_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_14[0:0]), 0bin0000000@(y_0_14[1:1]), 0bin0000000@(y_0_14[2:2]), 0bin0000000@(y_0_14[3:3]), 0bin0000000@(y_0_14[4:4]), 0bin0000000@(y_0_14[5:5]), 0bin0000000@(y_0_14[6:6]), 0bin0000000@(y_0_14[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_14_2[0:0]), 0bin0000000@(a_0_14[0:0]), 0bin0000000@(yp_0_13_1[0:0]), 0bin0000000@(xp_0_14_2[1:1]), 0bin0000000@(a_0_14[1:1]), 0bin0000000@(yp_0_13_1[1:1]), 0bin0000000@(xp_0_14_2[2:2]), 0bin0000000@(a_0_14[2:2]), 0bin0000000@(yp_0_13_1[2:2]), 0bin0000000@(xp_0_14_2[3:3]), 0bin0000000@(a_0_14[3:3]), 0bin0000000@(yp_0_13_1[3:3]), 0bin0000000@(xp_0_14_2[4:4]), 0bin0000000@(a_0_14[4:4]), 0bin0000000@(yp_0_13_1[4:4]), 0bin0000000@(xp_0_14_2[5:5]), 0bin0000000@(a_0_14[5:5]), 0bin0000000@(yp_0_13_1[5:5]), 0bin0000000@(xp_0_14_2[6:6]), 0bin0000000@(a_0_14[6:6]), 0bin0000000@(yp_0_13_1[6:6]), 0bin0000000@(xp_0_14_2[7:7]), 0bin0000000@(a_0_14[7:7]), 0bin0000000@(yp_0_13_1[7:7]));
t_y_0_14 : BITVECTOR(1);
ASSERT t_y_0_14@y_0_14 = BVPLUS( 9 , 0bin0@yp_0_14_0, 0bin0@yp_0_14_1, 0bin00000000@t_y_0_14);
ASSERT t_y_0_14@y_0_14 /= 0bin100000000;
ASSERT yp_0_12_3 = a_0_15;
ASSERT yp_0_13_2 = a_0_15;

ASSERT y_0_15 = BVPLUS(8,xp_0_15_3,a_0_15,yp_0_14_1);
ASSERT y_0_15 & xp_0_15_3 = xp_0_15_3;

ASSERT y_0_15 & a_0_15 = a_0_15 ;
ASSERT y_0_15 & yp_0_14_1 = yp_0_14_1 ;
ASSERT BVPLUS(8, 0bin0000000@(y_0_15[0:0]), 0bin0000000@(y_0_15[1:1]), 0bin0000000@(y_0_15[2:2]), 0bin0000000@(y_0_15[3:3]), 0bin0000000@(y_0_15[4:4]), 0bin0000000@(y_0_15[5:5]), 0bin0000000@(y_0_15[6:6]), 0bin0000000@(y_0_15[7:7])) = BVPLUS(8, 0bin0000000@(xp_0_15_3[0:0]), 0bin0000000@(a_0_15[0:0]), 0bin0000000@(yp_0_14_1[0:0]), 0bin0000000@(xp_0_15_3[1:1]), 0bin0000000@(a_0_15[1:1]), 0bin0000000@(yp_0_14_1[1:1]), 0bin0000000@(xp_0_15_3[2:2]), 0bin0000000@(a_0_15[2:2]), 0bin0000000@(yp_0_14_1[2:2]), 0bin0000000@(xp_0_15_3[3:3]), 0bin0000000@(a_0_15[3:3]), 0bin0000000@(yp_0_14_1[3:3]), 0bin0000000@(xp_0_15_3[4:4]), 0bin0000000@(a_0_15[4:4]), 0bin0000000@(yp_0_14_1[4:4]), 0bin0000000@(xp_0_15_3[5:5]), 0bin0000000@(a_0_15[5:5]), 0bin0000000@(yp_0_14_1[5:5]), 0bin0000000@(xp_0_15_3[6:6]), 0bin0000000@(a_0_15[6:6]), 0bin0000000@(yp_0_14_1[6:6]), 0bin0000000@(xp_0_15_3[7:7]), 0bin0000000@(a_0_15[7:7]), 0bin0000000@(yp_0_14_1[7:7]));
ASSERT x_1_0 = yp_0_0_0;
ASSERT x_1_1 = yp_0_1_0;
ASSERT x_1_2 = yp_0_2_0;
ASSERT x_1_3 = y_0_3;
ASSERT x_1_4 = yp_0_4_0;
ASSERT x_1_5 = yp_0_5_0;
ASSERT x_1_6 = yp_0_6_0;
ASSERT x_1_7 = y_0_7;
ASSERT x_1_8 = yp_0_8_0;
ASSERT x_1_9 = yp_0_9_0;
ASSERT x_1_10 = yp_0_10_0;
ASSERT x_1_11 = y_0_11;
ASSERT x_1_12 = yp_0_12_0;
ASSERT x_1_13 = yp_0_13_0;
ASSERT x_1_14 = yp_0_14_0;
ASSERT x_1_15 = y_0_15;
ASSERT p_1 = 0bin00000000;

ASSERT p_2 = 0bin00000000;

ASSERT p_3 = 0bin00000000;

ASSERT p_5 = 0bin00000000;

ASSERT p_6 = 0bin00000000;

ASSERT p_7 = 0bin00000000;

ASSERT p_8 = 0bin00000000;

ASSERT p_9 = 0bin00000000;

ASSERT p_10 = 0bin00000000;

ASSERT p_11 = 0bin00000000;

ASSERT p_12 = 0bin00000000;

ASSERT p_13 = 0bin00000000;

ASSERT p_14 = 0bin00000000;

ASSERT p_15 = 0bin00000000;

ASSERT x_1_0 = 0bin00000001;
ASSERT x_1_1 = 0bin00000000;
ASSERT x_1_2 = 0bin00000000;
ASSERT x_1_3 = 0bin00000000;
ASSERT x_1_4 = 0bin00000000;
ASSERT x_1_5 = 0bin00000000;
ASSERT x_1_6 = 0bin00000000;
ASSERT x_1_7 = 0bin00000000;
ASSERT x_1_8 = 0bin00000000;
ASSERT x_1_9 = 0bin00000000;
ASSERT x_1_10 = 0bin00000000;
ASSERT x_1_11 = 0bin00000000;
ASSERT x_1_12 = 0bin00000000;
ASSERT x_1_13 = 0bin00000000;
ASSERT x_1_14 = 0bin00000000;
ASSERT x_1_15 = 0bin00000000;
wx : BITVECTOR(8);
ASSERT wx = BVPLUS(8,0bin0000000@(p_0[0:0]),0bin0000000@(p_0[1:1]),0bin0000000@(p_0[2:2]),0bin0000000@(p_0[3:3]),0bin0000000@(p_0[4:4]),0bin0000000@(p_0[5:5]),0bin0000000@(p_0[6:6]),0bin0000000@(p_0[7:7]),0bin0000000@(p_1[0:0]),0bin0000000@(p_1[1:1]),0bin0000000@(p_1[2:2]),0bin0000000@(p_1[3:3]),0bin0000000@(p_1[4:4]),0bin0000000@(p_1[5:5]),0bin0000000@(p_1[6:6]),0bin0000000@(p_1[7:7]),0bin0000000@(p_2[0:0]),0bin0000000@(p_2[1:1]),0bin0000000@(p_2[2:2]),0bin0000000@(p_2[3:3]),0bin0000000@(p_2[4:4]),0bin0000000@(p_2[5:5]),0bin0000000@(p_2[6:6]),0bin0000000@(p_2[7:7]),0bin0000000@(p_3[0:0]),0bin0000000@(p_3[1:1]),0bin0000000@(p_3[2:2]),0bin0000000@(p_3[3:3]),0bin0000000@(p_3[4:4]),0bin0000000@(p_3[5:5]),0bin0000000@(p_3[6:6]),0bin0000000@(p_3[7:7]),0bin0000000@(p_4[0:0]),0bin0000000@(p_4[1:1]),0bin0000000@(p_4[2:2]),0bin0000000@(p_4[3:3]),0bin0000000@(p_4[4:4]),0bin0000000@(p_4[5:5]),0bin0000000@(p_4[6:6]),0bin0000000@(p_4[7:7]),0bin0000000@(p_5[0:0]),0bin0000000@(p_5[1:1]),0bin0000000@(p_5[2:2]),0bin0000000@(p_5[3:3]),0bin0000000@(p_5[4:4]),0bin0000000@(p_5[5:5]),0bin0000000@(p_5[6:6]),0bin0000000@(p_5[7:7]),0bin0000000@(p_6[0:0]),0bin0000000@(p_6[1:1]),0bin0000000@(p_6[2:2]),0bin0000000@(p_6[3:3]),0bin0000000@(p_6[4:4]),0bin0000000@(p_6[5:5]),0bin0000000@(p_6[6:6]),0bin0000000@(p_6[7:7]),0bin0000000@(p_7[0:0]),0bin0000000@(p_7[1:1]),0bin0000000@(p_7[2:2]),0bin0000000@(p_7[3:3]),0bin0000000@(p_7[4:4]),0bin0000000@(p_7[5:5]),0bin0000000@(p_7[6:6]),0bin0000000@(p_7[7:7]),0bin0000000@(p_8[0:0]),0bin0000000@(p_8[1:1]),0bin0000000@(p_8[2:2]),0bin0000000@(p_8[3:3]),0bin0000000@(p_8[4:4]),0bin0000000@(p_8[5:5]),0bin0000000@(p_8[6:6]),0bin0000000@(p_8[7:7]),0bin0000000@(p_9[0:0]),0bin0000000@(p_9[1:1]),0bin0000000@(p_9[2:2]),0bin0000000@(p_9[3:3]),0bin0000000@(p_9[4:4]),0bin0000000@(p_9[5:5]),0bin0000000@(p_9[6:6]),0bin0000000@(p_9[7:7]),0bin0000000@(p_10[0:0]),0bin0000000@(p_10[1:1]),0bin0000000@(p_10[2:2]),0bin0000000@(p_10[3:3]),0bin0000000@(p_10[4:4]),0bin0000000@(p_10[5:5]),0bin0000000@(p_10[6:6]),0bin0000000@(p_10[7:7]),0bin0000000@(p_11[0:0]),0bin0000000@(p_11[1:1]),0bin0000000@(p_11[2:2]),0bin0000000@(p_11[3:3]),0bin0000000@(p_11[4:4]),0bin0000000@(p_11[5:5]),0bin0000000@(p_11[6:6]),0bin0000000@(p_11[7:7]),0bin0000000@(p_12[0:0]),0bin0000000@(p_12[1:1]),0bin0000000@(p_12[2:2]),0bin0000000@(p_12[3:3]),0bin0000000@(p_12[4:4]),0bin0000000@(p_12[5:5]),0bin0000000@(p_12[6:6]),0bin0000000@(p_12[7:7]),0bin0000000@(p_13[0:0]),0bin0000000@(p_13[1:1]),0bin0000000@(p_13[2:2]),0bin0000000@(p_13[3:3]),0bin0000000@(p_13[4:4]),0bin0000000@(p_13[5:5]),0bin0000000@(p_13[6:6]),0bin0000000@(p_13[7:7]),0bin0000000@(p_14[0:0]),0bin0000000@(p_14[1:1]),0bin0000000@(p_14[2:2]),0bin0000000@(p_14[3:3]),0bin0000000@(p_14[4:4]),0bin0000000@(p_14[5:5]),0bin0000000@(p_14[6:6]),0bin0000000@(p_14[7:7]),0bin0000000@(p_15[0:0]),0bin0000000@(p_15[1:1]),0bin0000000@(p_15[2:2]),0bin0000000@(p_15[3:3]),0bin0000000@(p_15[4:4]),0bin0000000@(p_15[5:5]),0bin0000000@(p_15[6:6]),0bin0000000@(p_15[7:7]));

ASSERT wx = 0bin00000010;
QUERY FALSE;
COUNTEREXAMPLE;
